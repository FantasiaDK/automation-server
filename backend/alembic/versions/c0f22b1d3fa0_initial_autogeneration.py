"""Initial autogeneration

Revision ID: c0f22b1d3fa0
Revises:
Create Date: 2024-10-11 09:32:41.015254

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "c0f22b1d3fa0"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


session_status_enum = sa.Enum(
    "NEW", "IN_PROGRESS", "COMPLETED", "FAILED", name="sessionstatus"
)
trigger_type_enum = sa.Enum("CRON", "WORKQUEUE", "DATE", name="triggertype")
workitem_status_enum = sa.Enum(
    "NEW",
    "IN_PROGRESS",
    "COMPLETED",
    "FAILED",
    "PENDING_USER_ACTION",
    name="workitemstatus",
)

target_type_enum = sa.Enum(
    "PYTHON",
    "BLUE_PRISM",
    "UI_PATH",
    "POWER_AUTOMATE_DESKTOP",
    name="targettypeenum",
)


def upgrade() -> None:
    context = op.get_context()
    dialect_name = context.dialect.name

    if dialect_name == "postgresql":
        target_json_type = postgresql.JSONB(astext_type=sa.Text())
    else:
        target_json_type = sa.Text()

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "accesstoken",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("identifier", sa.String(), nullable=False),
        sa.Column("access_token", sa.String(), nullable=False),
        sa.Column("expires_at", sa.DateTime(), nullable=False),
        sa.Column("deleted", sa.Boolean(), nullable=False, default=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_accesstoken_access_token"),
        "accesstoken",
        ["access_token"],
        unique=True,
    )
    op.create_index(
        op.f("ix_accesstoken_identifier"), "accesstoken", ["identifier"], unique=True
    )

    op.create_table(
        "credential",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("password", sa.String(), nullable=True),
        sa.Column("deleted", sa.Boolean(), nullable=False, default=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_table(
        "resource",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("fqdn", sa.String(), nullable=False),
        sa.Column("capabilities", sa.String(), nullable=False),
        sa.Column("available", sa.Boolean(), nullable=False),
        sa.Column("last_seen", sa.DateTime(), nullable=True),
        sa.Column("deleted", sa.Boolean(), nullable=False,default=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "systemlog",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("message", sa.String(), nullable=False),
        sa.Column("level", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "workqueue",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("enabled", sa.Boolean(), nullable=False),
        sa.Column("deleted", sa.Boolean(), nullable=False, default=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "process",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("requirements", sa.String(), nullable=True),
        sa.Column(
            "target_type",
            target_type_enum,
            nullable=True,
        ),
        sa.Column("target_source", sa.String(), nullable=True),
        sa.Column("target_credentials_id", sa.Integer(), nullable=True),
        sa.Column("credentials_id", sa.Integer(), nullable=True),
        sa.Column("workqueue_id", sa.Integer(), nullable=True),
        sa.Column("deleted", sa.Boolean(), nullable=False, default=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["credentials_id"],
            ["credential.id"],
            onupdate="CASCADE",
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["target_credentials_id"],
            ["credential.id"],
            onupdate="CASCADE",
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["workqueue_id"], ["workqueue.id"], onupdate="CASCADE", ondelete="SET NULL"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "workitem",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("data", target_json_type, nullable=False),
        sa.Column("reference", sa.String(), nullable=True),
        sa.Column("locked", sa.Boolean(), nullable=False),
        sa.Column("status", workitem_status_enum, nullable=False),
        sa.Column("message", sa.String(), nullable=False),
        sa.Column("workqueue_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["workqueue_id"],
            ["workqueue.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_workitem_reference"), "workitem", ["reference"], unique=False
    )
    op.create_index(op.f("ix_workitem_status"), "workitem", ["status"], unique=False)

    op.create_table(
        "session",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("process_id", sa.Integer(), nullable=False),
        sa.Column("resource_id", sa.Integer(), nullable=True),
        sa.Column("dispatched_at", sa.DateTime(), nullable=True),
        sa.Column("status", session_status_enum, nullable=False),
        sa.Column("stop_requested", sa.Boolean(), nullable=False),
        sa.Column("deleted", sa.Boolean(), nullable=False, default=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["process_id"],
            ["process.id"],
        ),
        sa.ForeignKeyConstraint(
            ["resource_id"],
            ["resource.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "trigger",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("type", trigger_type_enum, nullable=False),
        sa.Column("cron", sa.String(), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=True),
        sa.Column("workqueue_id", sa.Integer(), nullable=True),
        sa.Column("workqueue_resource_limit", sa.Integer(), nullable=False),
        sa.Column("workqueue_scale_up_threshold", sa.Integer(), nullable=False),
        sa.Column("deleted", sa.Boolean(), nullable=True),
        sa.Column("enabled", sa.Boolean(), nullable=True),
        sa.Column("last_triggered", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("process_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["process_id"],
            ["process.id"],
        ),
        sa.ForeignKeyConstraint(
            ["workqueue_id"],
            ["workqueue.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "sessionlog",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("session_id", sa.Integer(), nullable=False),
        sa.Column("workitem_id", sa.Integer(), nullable=True),
        sa.Column("message", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["session_id"], ["session.id"], ondelete="CASCADE", onupdate="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["workitem_id"], ["workitem.id"], ondelete="SET NULL", onupdate="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    context = op.get_context()
    dialect_name = context.dialect.name

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("sessionlog")
    op.drop_table("trigger")
    op.drop_table("session")
    op.drop_table("workitem")
    op.drop_table("process")
    op.drop_table("workqueue")
    op.drop_table("systemlog")
    op.drop_table("resource")
    op.drop_table("credential")
    op.drop_index(op.f("ix_accesstoken_identifier"), table_name="accesstoken")
    op.drop_index(op.f("ix_accesstoken_access_token"), table_name="accesstoken")
    op.drop_table("accesstoken")

    if dialect_name == "postgresql":
        session_status_enum.drop(op.get_bind(), checkfirst=False)
        trigger_type_enum.drop(op.get_bind(), checkfirst=False)
        workitem_status_enum.drop(op.get_bind(), checkfirst=False)
        target_type_enum.drop(op.get_bind(), checkfirst=False)

    # ### end Alembic commands ###
