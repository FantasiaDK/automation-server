version: '3.8'

# This docker-compose file sets up a development environment. It can be used as a base for production use.

x-worker-common: &worker-template
  image: ghcr.io/odense-rpa/ats-worker:v0.2.0
  environment:
    - ATS_URL=http://api:8000
    - ATS_TOKEN=
    - TZ=Europe/Copenhagen
  networks:
    - app-network
  depends_on:
    - api

services:
  api:
    image: ghcr.io/odense-rpa/ats-backend:v0.2.0
    depends_on:
      - db
    ports:
      - "8000"
    environment:
      - TZ=Europe/Copenhagen
      # Remember to set username and password for production use
      - DATABASE_URL=postgresql://ats_user:ats_password@db:5432/ats
    networks:
      - app-network

  frontend:
    image: ghcr.io/odense-rpa/ats-frontend:v0.2.0
    ports:
      - "80"
    networks:
      - app-network
    environment:
      - VITE_ATS_API_BASE_URL=/api  # Set environment variable
      - TZ=Europe/Copenhagen

  # Workers for processing tasks, add more as needed
  worker01:
    <<: *worker-template
    hostname: worker-01

  worker02:
    <<: *worker-template
    hostname: worker-02

  # Services needed to run the application

  db:
    image: postgres:latest
    environment:
      # Set a default user / password for the api. Change this for production use.
      POSTGRES_USER: ats_user 
      POSTGRES_PASSWORD: ats_password
      POSTGRES_DB: ats
    networks:
      - app-network
    volumes:
      - db-data:/var/lib/postgresql/data  # Mount named volume to /var/lib/postgresql/data

  proxy:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
      - frontend
    networks:
      - app-network


networks:
  app-network:
    driver: bridge

volumes:
  db-data:
